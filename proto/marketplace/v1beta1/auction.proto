syntax = "proto3";
package OmniFlix.marketplace.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "marketplace/v1beta1/listing.proto";

option go_package = "github.com/OmniFlix/marketplace/x/marketplace/types";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;

message AuctionListing {
  uint64                    id                   = 1;
  string                    nft_id               = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
  string                    denom_id             = 3 [(gogoproto.moretags) = "yaml:\"denom_id\""];
  cosmos.base.v1beta1.Coin  start_price          = 4 [
    (gogoproto.nullable)     = false,
    (gogoproto.moretags)     = "yaml:\"start_price\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
  google.protobuf.Timestamp start_time           = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime)  = true,
    (gogoproto.moretags) = "yaml:\"start_time\""
  ];
  google.protobuf.Timestamp end_time             = 6 [
    (gogoproto.stdtime)  = true,
    (gogoproto.moretags) = "yaml:\"end_time\""
  ];
  string                    owner                = 7;
  string                    increment_percentage = 8 [
    (gogoproto.moretags)   = "yaml:\"increment_percentage\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  repeated string           whitelist_accounts   = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"whitelist_accounts\""
  ];
  repeated WeightedAddress  split_shares         = 10 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"split_shares\""
  ];
}

enum AuctionStatus {
  AUCTION_STATUS_UNSPECIFIED = 0;
  AUCTION_STATUS_INACTIVE    = 1;
  AUCTION_STATUS_ACTIVE      = 2;
}

message Bid {
  option (gogoproto.equal)             = true;

  uint64                    auction_id = 1 [(gogoproto.moretags) = "yaml:\"auction_id\""];
  string                    bidder     = 2;
  cosmos.base.v1beta1.Coin  amount     = 3 [(gogoproto.nullable) = false];
  google.protobuf.Timestamp time       = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}