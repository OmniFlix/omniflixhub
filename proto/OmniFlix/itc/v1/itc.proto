syntax = "proto3";
package OmniFlix.itc.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/OmniFlix/omniflixhub/v5/x/itc/types";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;

message Campaign {
  uint64                           id = 1;
  string                           name = 2;
  string                           description = 3;
  google.protobuf.Timestamp        start_time = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"start_time\""
  ];
  google.protobuf.Timestamp         end_time = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"end_time\""
  ];
  string                            creator = 6;
  string                            nft_denom_id = 7 [
    (gogoproto.moretags) = "yaml:\"nft_denom_id\""
  ];
  uint64                            max_allowed_claims = 8 [
    (gogoproto.moretags) = "yaml:\"max_allowed_claims\""
  ];
  InteractionType                   interaction = 9;
  ClaimType                         claim_type = 10;
  cosmos.base.v1beta1.Coin          tokens_per_claim = 11 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"tokens_per_claim\""
  ];
  cosmos.base.v1beta1.Coin          total_tokens = 12 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"total_tokens\""
  ];
  cosmos.base.v1beta1.Coin          available_tokens = 13 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"available_tokens\""
  ];
  repeated string                   received_nft_ids = 14 [
    (gogoproto.moretags) = "yaml:\"received_nft_ids\""
  ];
  NFTDetails                        nft_mint_details = 15 [
    (gogoproto.moretags) = "yaml:\"nft_mint_details\""
  ];
  Distribution                      distribution = 16 [
    (gogoproto.moretags) = "yaml:\"distribution\""
  ];
  uint64 mint_count  = 17 [
    (gogoproto.moretags) = "yaml:\"mint_count\""
  ];
  uint64 claim_count = 18 [
    (gogoproto.moretags) = "yaml:\"claim_count\""
  ];
}

message Distribution {
  DistributionType             type = 1;
  google.protobuf.Duration     stream_duration = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true
  ];
}

enum DistributionType {
  DISTRIBUTION_TYPE_INSTANT = 0;
  DISTRIBUTION_TYPE_STREAM = 1;
}

enum InteractionType {
  INTERACTION_TYPE_BURN = 0;
  INTERACTION_TYPE_TRANSFER = 1;
  INTERACTION_TYPE_HOLD = 2;
}

enum CampaignStatus {
  CAMPAIGN_STATUS_UNSPECIFIED = 0;
  CAMPAIGN_STATUS_INACTIVE = 1;
  CAMPAIGN_STATUS_ACTIVE = 2;
}

enum ClaimType {
  CLAIM_TYPE_FT = 0;
  CLAIM_TYPE_NFT = 1;
  CLAIM_TYPE_FT_AND_NFT = 2;
}

message NFTDetails {
  string     denom_id = 1;
  string     name = 2;
  string     description = 3;
  string     media_uri = 4;
  string     preview_uri = 5;
  string     royalty_share = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"royalty_share\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  bool       transferable = 7;
  bool       extensible = 8;
  bool       nsfw = 9;
  string     data = 10;
  string     uri_hash = 11;
  uint64     start_index = 12;
  string     name_delimiter = 13;
}

message Claim {
  uint64     campaign_id = 1;
  string     address = 2;
  string     nft_id = 3;
  InteractionType interaction = 4;
}